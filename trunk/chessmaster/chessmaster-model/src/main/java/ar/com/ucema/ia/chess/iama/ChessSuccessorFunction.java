package ar.com.ucema.ia.chess.iama;import java.util.ArrayList;import java.util.List;import aima.search.framework.Successor;import aima.search.framework.SuccessorFunction;import ar.com.ucema.ia.chess.model.BlackPieceChessMovement;import ar.com.ucema.ia.chess.model.ChessBoard;/** * Devuelve todas las posibles funciones sucesoras *  * @see SuccessorFunction  * @author Matías Suárez */public class ChessSuccessorFunction implements SuccessorFunction {	@SuppressWarnings("unchecked")	public List getSuccessors(Object arg0) {		ChessBoard originalBoard = (ChessBoard) arg0;		List<Successor> successors = new ArrayList<Successor>();		List<BlackPieceChessMovement> movements = originalBoard.getAllPosibleBlackPiecesMovements();				for (BlackPieceChessMovement move : movements) {			ChessBoard clonedBoard = originalBoard.clone();			Boolean isValidMovement = clonedBoard.moveWithThis(move);			if ( isValidMovement )				successors.add(new Successor(move.toString(), clonedBoard));		}				return successors;	}}