package ar.com.ucema.ia.chess.iama;import java.util.List;import aima.search.framework.HeuristicFunction;import ar.com.ucema.ia.chess.model.ChessBoard;import ar.com.ucema.ia.chess.model.Color;import ar.com.ucema.ia.chess.model.pieces.ChessPiece;/** * Esta heuristica toma en cuenta el valor de cada pieza. Como la "maquina" siempre es toma el color negro, solo tengo que contar las piezas * de color blanco. * @see HeuristicFunction * * @author Matías Suárez */public class ChessHeuristicFunction implements HeuristicFunction {	public double getHeuristicValue(Object arg0) {		ChessBoard board = (ChessBoard) arg0;		List<ChessPiece> list = board.getChessPiecesWithColor(Color.Black);		int total = 0;		int offset = 1000;				for (ChessPiece chessPiece : list) {			total += chessPiece.getPieceValue();		}				// cuanto mayor es el resultado de la heuristica, mejor es el resultado. En este caso cuanto mayor es el total, peor es mi resultado con 		// lo cual invierto el numero.		return (offset - total);	}}