package ar.com.ucema.ia.chess.iama;import java.util.List;import aima.search.framework.GoalTest;import ar.com.ucema.ia.chess.model.ChessBoard;import ar.com.ucema.ia.chess.model.ChessCell;import ar.com.ucema.ia.chess.model.ChessGame;import ar.com.ucema.ia.chess.model.Color;import ar.com.ucema.ia.chess.model.pieces.ChessPiece;import ar.com.ucema.ia.chess.model.pieces.King;public class ChessGoalTest implements GoalTest {	public boolean isGoalState(Object arg0) {		ChessGame game = ChessGame.getInstance();		ChessBoard board = (ChessBoard) arg0;				if ( game.getColorToPlayNext().equals(Color.Black) ) {			return isWhiteGoalTest(board);		} else			return isBlackGoalTest(board);			}	private boolean isBlackGoalTest(ChessBoard board) {		return isKingAlive(board, Color.White);	}	private boolean isWhiteGoalTest(ChessBoard board) {		return isKingAlive(board, Color.Black);	}	private boolean isKingAlive(ChessBoard board, Color color) {		List<ChessCell> cells = board.getChessCells();		boolean isKingAlive = false;				for (ChessCell chessCell : cells) {			if ( chessCell.getPiece() != null ) {				ChessPiece piece = chessCell.getPiece();								if ( (piece instanceof King) && (piece.getColor().equals(color)) ) 					isKingAlive = true;			}		}				return isKingAlive;	}}