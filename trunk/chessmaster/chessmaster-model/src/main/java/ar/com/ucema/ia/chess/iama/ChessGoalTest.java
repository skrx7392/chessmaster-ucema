package ar.com.ucema.ia.chess.iama;import java.util.List;import aima.search.framework.GoalTest;import ar.com.ucema.ia.chess.model.ChessBoard;import ar.com.ucema.ia.chess.model.ChessCell;import ar.com.ucema.ia.chess.model.Color;import ar.com.ucema.ia.chess.model.pieces.ChessPiece;import ar.com.ucema.ia.chess.model.pieces.King;/** * Como la "maquina" siempre es toma el color negro, para el agente el juego termina cuando muere el rey blanco. * @see GoalTest * * @author Matías Suárez */public class ChessGoalTest implements GoalTest {	public boolean isGoalState(Object arg0) {		ChessBoard board = (ChessBoard) arg0;		return (!isKingAlive(board, Color.White));	}	private boolean isKingAlive(ChessBoard board, Color color) {		List<ChessCell> cells = board.getChessCells();		boolean isKingAlive = false;				for (ChessCell chessCell : cells) {			if ( chessCell.getPiece() != null ) {				ChessPiece piece = chessCell.getPiece();								if ( (piece instanceof King) && (piece.getColor().equals(color)) ) 					isKingAlive = true;			}		}		return isKingAlive;	}}